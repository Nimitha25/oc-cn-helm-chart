# Copyright (c) 2023 Oracle and/or its affiliates. 

# Default values for mychart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# For non-empty repository, "/" MUST be appended
imageRepository: "container-registry.oracle.com/communications_monetization/"
imagePullSecrets:
    # For multiple pull secrets add the name: "secret" below again
    - name: "my-registry-secret-k"
uniPass: "cGlu"

db:
    # Shared Database Connection details
    # Specifies if DB is SSL enabled. Supported values are NO , ONE_WAY and TWO_WAY
    sslMode: "NO"
    # Host name or IP Address of Database Server
    host: 192.168.161.128
    # Port number of Database Server
    port: 1521
    # Name of the DB system administrator
    user: sys
    # Password of the DB system administrator
    password: c3lz 
    # Service Name which identifies DB
    serviceName: CNLAB
    # Role assigned to this DBA user
    role: sysdba
    # Password of the DB SSL wallet. Required if isslMode is ONE_WAY 
    walletPassword:
    walletType: FILE

security:
      java:
        #Set this flag to override default Java security property
        overrideSecurityProperties: false
   
monitoring:
      prometheus:
        jmx_exporter:
          enable: false 
        operator:
          enable: false 
          #Namespace where Prometheus Operator is deployed
          namespace: prometheus 
          #Helm release name given while deploying Prometheus Operator
          release: prometheus

ocbrm:
    imagePullPolicy: IfNotPresent
    # Set isAmt: true , if AMT is going to be used
    isAmt: false
    # Set isIPV6Enabled: true if the IPV6 is enabled in the Kubernetes environment
    isIPV6Enabled: false
    # Set ece_deployed: false , if ECE is not going to be deployed
    ece_deployed: true
    # Set pdc_deployed: true , if PDC is going to be deployed
    pdc_deployed: true
    # Set use_oracle_brm_images: false , if custom docker images are built
    use_oracle_brm_images: true
    # Set existing_rootkey_wallet: true , if existing database is used (non init-db ) or if exisiting root-key wallet is used.
    existing_rootkey_wallet: false
    # Set is_upgrade flag to true for DB upgrade from PS3 to PS4, else set to false for fresh db initialization.
    is_upgrade: false
    TZ: UTC
    LOG_LEVEL: 1
    # SSL is enabled when set to true and disabled when set to false
    isSSLEnabled: false
    # Disables SSL from CM to DM/EM. When set to true set isSSLEnabled = true
    cmSSLTermination: false
    # Set customSSLWallet to true, when using custom TLS certificate for CM. Set cmSSLTermination to true as well.
    # The wallet containing the custom TLS certificate needs to placed at top level of the helm chart
    customSSLWallet: false
    # To enable autoscaling set isHPAEnabled to true.
    isHPAEnabled: false
    # To enable limts on CPU and Memory set isResourceLimitEnabled to true.
    isResourceLimitEnabled: false
    # To refresh the PCM context to accept request on new CM
    refreshInterval: 
    # Time elapsed before the pod is terminated, increase it for long running transaction
    terminationGracePeriodSeconds: 
    # Time spent waiting for socket re-connection
    pcpReconnectDelayOnSocketError:
    # Time for retrying the connect , when pcp_connect fails
    pcpConnectRetryDelayOnError:
    # To enable Security Context in the cluster set EnableSecurityContext to true.
    EnableSecurityContext: false
    # Set root_key_rotate: true to rotate BRM Root Key
    root_key_rotate: false
    brm_root_pass: cGFzc3dvcmQxMjMj 
    # Set rotate_password: true to change BRM Root Password
    rotate_password: false 
    new_brm_root_password: "cGFzc3dvcmQxMjMj"
    # To rotate passwords for BRM users/roles set rotate_brm_role_passwords to true and,
    # provide current password with old_ prefix example: old_acct_recv.0.0.0.1: "" and the new password to be updated as acct_recv.0.0.0.1: ""
    rotate_brm_role_passwords: false
    # Set the passwords for brm users/roles
    brm_role_pass:
        acct_recv.0.0.0.1: ""
        bc_client.0.0.0.1: ""
        bill_inv_pymt_sub.0.0.0.1: ""
        billing.0.0.0.1: ""
        boc_client.0.0.0.1: ""
        collections.0.0.0.1: ""
        crypt_utils.0.0.0.1: ""
        cust_center.0.0.0.1: ""
        cust_mgnt.0.0.0.1: ""
        invoicing.0.0.0.1: ""
        java_client.0.0.0.1: ""
        load_utils.0.0.0.1: ""
        payments.0.0.0.1: ""
        pcc_client.0.0.0.1: ""
        rerating.0.0.0.1: ""
        rsm.0.0.0.1: ""
        super_user.0.0.0.1: ""
        ui_client.0.0.0.1: ""
        ece.0.0.0.1: ""

    wallet:
        client: QnJtMTIzNCM= 
        server: QnJtMTIzNCM=
        root: QnJtMTIzNCM=

    cm:
        isEnabled: true
        deployment:
            replicaCount: 1
            imageName: cm
            imageTag: 15.0.0.0.0
            #Set enable_publish to 1 to enables publishing of business events through  EAI Framework
            enable_publish: 1
            # Enable enrichment in published message with notification preference.
            enable_prefs_enrichment: false
            # List of publishers with enrichment enabled.
            prefs_enabled_publisher_list: 0.0.9.6
            # Location of where to get the phone number for subscribers.
            prefs_phone_no_location: 0
            #Set provisioning_enabled to true to enable provisioning
            provisioning_enabled: false
            #Set simulate_agent to 0 to publish service orders
            simulate_agent: 1
            perflib_enabled: false
        service:
            type: ClusterIP
            #Below entry is used to specify CM's TLS certificate Subject Alternative Name
            #Example serviceFqdn: dns:node1.brm.com,dns:node2.brm.com,ip:127.0.0.1
            serviceFqdn: dns:ocbrm.example.com
        custom_files:
            enable: false
        resourceLimits:
            limitsCpu: 2.2
            requestCpu: 2
            limitsMemory: 2048Mi
            requestMemory: 1536Mi
        hpaValues:
            minReplica: 2
            maxReplica: 4
            targetCpu: 80
            targetMemory: 80

    eai_js:
        deployment:
            imageName: eai_js
            imageTag: 15.0.0.0.0
            eaiConfigFile: 
        resourceLimits:
            limitsCpu: 0.7
            requestCpu: 0.5
            limitsMemory: 768Mi
            requestMemory: 256Mi

    dm_oracle:
        isEnabled: true
        deployment:
            replicaCount: 1
            imageName: dm_oracle
            imageTag: 15.0.0.0.0
            perflib_enabled: false
            DM_DEBUG: "0x0"
            DM_DEBUG2: "0x0"
            DM_DEBUG3: "0x0"
            DM_DEBUG5: "0x0"
        resourceLimits:
            limitsCpu: 4
            requestCpu: 3.5
            limitsMemory: 4096Mi
            requestMemory: 3072Mi
        hpaValues:
            minReplica: 2
            maxReplica: 4
            targetCpu: 80
            targetMemory: 80

    dm_kafka:
        isEnabled: false
        storage: 50Mi
        kafkaAsyncMode: false
        maxBlock: 3000
        deployment:
            imageName: dm_kafka
            imageTag: 15.0.0.0.0
            replicaCount: 1
            kafka_bootstrap_server_list: ece-kafka:9093
            poolSize: 64
            topicName: BRMTopic
            topicFormat: XML
            topicStyle: CamelCase
            isSecurityEnabled: false
            trustStorePassword:
            keyStorePassword:
            keyPassword:
            password:
        resourceLimits:
            limitsCpu: 2.5
            requestCpu: 0.1
            limitsMemory: 1024Mi
            requestMemory: 128Mi
        hpaValues:
            minReplica: 2
            maxReplica: 4
            targetCpu: 80
            targetMemory: 80

    dm_email:
        isEnabled: true
        deployment:
            replicaCount: 1
            imageName: dm_email
            imageTag: 15.0.0.0.0
            smtpServer: example.us.oracle.com

    dm_invoice:
        isEnabled: true
        deployment:
            replicaCount: 1
            imageName: dm_invoice
            imageTag: 15.0.0.0.0

    dm_ldap:
        isEnabled: true
        deployment:
            replicaCount: 1
            imageName: dm_ldap
            imageTag: 15.0.0.0.0
            dirserverpassword:

    dm_prov_telco:
        isEnabled: true
        deployment:
            replicaCount: 1
            imageName: dm_prov_telco
            imageTag: 15.0.0.0.0
        service_order:
            storage: 50Mi

    # Update the provisioner name
    dynamic_provisioner:
        provisioner: cluster.local/my-nfs-server-provisioner

    storage_class:
        create: false
        name: nfs
        parameters: { tier: standard }

    virtual_time:
        enabled: true
        sync_pvt_time: 60
        storage: 50Mi

    db:
        deployment:
            imageName: init_db
            imageTag: 15.0.0.0.0
        host: 192.168.161.128
        port: 1521
        service: CNLAB
        # Specifies if DB is SSL enabled. Supported values are NO , ONE_WAY and TWO_WAY
        sslMode: NO
        # Password of the DB SSL wallet. Required if sslMode is set to "ONE_WAY"
        walletPassword:
        # Specify the DB SSL wallet type: pkcs12 or sso
        walletType: FILE
        # Set enable_partition: No , if partitioning is disabled at database level or want to skip partitioning
        enable_partition: 'Yes'
        # Set storage_model to determine size of BRM database tablespaces
        storage_model: 'Test'
        schemauser: pin
        schemapass: cGlu
        schematablespace: pin00
        indextablespace: pinx00
        nls_lang: AMERICAN_AMERICA.AL32UTF8
        pipelineschemauser:
        pipelineschemapass: 
        pipelineschematablespace:
        pipelineindextablespace:
        # uncomment the below for multi-schema setup and add new block 'secondaryN' for more than 1 secondary schema
        #multiSchemas:
            #secondary1:
               #deploy: true
               #host:
               #port:
               #service:
               #schemauser:
               #schemapass:
               #schematablespace:
               #indextablespace:

    upgrade:
        deployment:
            imageName: upgrade
            imageTag: 15.0.0.0.0

    perflib:
        deployment:
            imageName: perflib
            imageTag: 15.0.0.0.0
            #Set persistPerflibLogs to True if you want to store perflib timing files into the DB
            persistPerflibLogs: false
        resourceLimits:
            limitsCpu: 0.7
            requestCpu: 0.5
            limitsMemory: 768Mi
            requestMemory: 256Mi
            
    dm_fusa:
        isEnabled: true
        deployment:
            imageName: dm_fusa
            imageTag: 15.0.0.0.0
            simulatorTag: 15.0.0.0.0
            dmf_sid_pwd: ""
            dmf_pid_pwd: "" 
        tempdir:
            storage: 50Mi

    dm_vertex:
        isEnabled: false
        deployment:
            replicaCount: 1
            imageName: dm_vertex
            imageTag: 15.0.0.0.0
            quantum_db_password:
            ctqCfg: /oms/vertex/64bit/cfg
            ctqCfgName: CTQ Test
            ctqSmObj: ./dm_vertex_ctq30206.so

    realtimepipe:
        isEnabled: true
        deployment:
            replicaCount: 1
            imageName: realtimepipe
            imageTag: 15.0.0.0.0
            rtp_num_thread: 8
            rtp_num_pipe: 2
            discount_trace: True
            console_discount_trace: True
            loglevel: major
            SemaphoreEnable: True
        pvc:
            storage: 50Mi
        resourceLimits:
            limitsCpu: 1.2
            requestCpu: 1
            limitsMemory: 3072Mi
            requestMemory: 2560Mi
        hpaValues:
            minReplica: 2
            maxReplica: 4
            targetCpu: 80
            targetMemory: 80


    batch_controller:
        isEnabled: true
        deployment:
            replicaCount: 1
            imageName: batch_controller
            imageTag: 15.0.0.0.0
        pvc:
            storage: 50Mi
        resourceLimits:
            limitsCpu: 1.2
            requestCpu: 1
            limitsMemory: 512Mi
            requestMemory: 409Mi
        hpaValues:
            minReplica: 2
            maxReplica: 4
            targetCpu: 80
            targetMemory: 80

    dm_eai:
      isEnabled: true
      deployment:
        imageName: dm_eai
        imageTag: 15.0.0.0.0
        replicaCount: 1
      resourceLimits:
        limitsCpu: 1.2
        requestCpu: 1
        limitsMemory: 512Mi
        requestMemory: 409Mi
      hpaValues:
        minReplica: 2
        maxReplica: 4
        targetCpu: 80
        targetMemory: 80
        

    rel_daemon:
      isEnabled: true
      job:
        isEnabled: true
        dbNumber: 0.0.0.1
      deployment:
        imageName: rel_daemon
        imageTag: 15.0.0.0.0
        replicaCount: 1
      resourceLimits:
        limitsCpu: 2.2
        requestCpu: 2
        limitsMemory: 1228Mi
        requestMemory: 1024Mi
      hpaValues:
        minReplica: 2
        maxReplica: 4
        targetCpu: 80
        targetMemory: 80

    rem:
      logging:
        logToFile: false
        log4j2:
          logger:
            brmRatedeventmanager: INFO
            brmRatedeventmanagerDiagnostic: INFO
            root: INFO
      isEnabled: true
      deployment:
        streamingEnabled: false
        topicName: RatedEvents
        kafkaBootstrapServer: ece-kafka:9093
        imageName: rem
        imageTag: 15.0.0.0.0
        storage:
          input: 1Gi
          reject: 1Gi
          archive: 1Gi
          data: 100Mi
      resourceLimits:
        limitsCpu: 2.0
        requestCpu: 0.5
        limitsMemory: 1228Mi
        requestMemory: 512Mi
      hpaValues:
        minReplica: 2
        maxReplica: 4
        targetCpu: 80
        targetMemory: 80
      healthCheckPort: 8989

    rel_manager:
      job:
        isEnabled: true
        dbNumber: 0.0.0.1
        logging:
          logToFile: false
          log4j2:
            logger:
              brmRatedeventmanager: INFO
              brmRelManager: INFO
              brmTableFormatter: INFO
              root: INFO

    batchpipe:
        isEnabled: true
        deployment:
            imageName: batch_pipeline
            imageTag: 15.0.0.0.0
            discount_trace: True
            console_discount_trace: True
            loglevel: major

    roampipe:
        isEnabled: false
        deployment:
            imageName: roam_pipeline
            imageTag: 15.0.0.0.0
            discount_trace: True
            console_discount_trace: True
            loglevel: major
        pvc:
            storage: 100Mi

    formatter:
      isEnabled: false
      deployment:
        imageName: formatter
        imageTag: 15.0.0.0.0
        replicaCount: 1
        logLevel: 1
        jsLogLevel: 1
        pxsltLogLevel: 1

    cmt:
        # Set enabled: true for running pin_cmt
        enabled: false
        storage: 50Mi

    config_jobs:
        deployment:
            imageName: brm_apps
            imageTag: 15.0.0.0.0
        # Set run_apps: true for running custom scripts
        run_apps: false
        # Set isMultiSchema: true to trigger job for multiSchemas
        isMultiSchema: false
        # Increment restart_count to restart cm during helm upgrade
        restart_count: 0
        # Custom script name to be executed as part of Job
        script_name: loadme.sh
        configmap_path: /oms/load

    brm_apps:
        job:
            isEnabled: true
            # Set isMultiSchema: true to trigger job for multiSchemas
            isMultiSchema: false
            configmap_path: /oms/load
            script_name: loadme.sh
        deployment:
            isEnabled: true
            imageName: brm_apps
            imageTag: 15.0.0.0.0
            replicaCount: 1
            pin_billd:
                mtaChildren: 5
                mtaPerBatch: 500
                mtaPerStep: 1000
                mtaFetchSize: 5000
                login_name: bill_inv_pymt_sub
                user_id: 412
            pin_export_price:
                mtaChildren: 5
                mtaPerBatch: 500
                mtaPerStep: 1000
                mtaFetchSize: 5000
                login_name: load_utils
                user_id: 413
            pin_inv:
                mtaChildren: 5
                mtaPerBatch: 500
                mtaPerStep: 1000
                mtaFetchSize: 5000
                login_name: invoicing
                user_id: 403
            pin_trial_bill:
                mtaChildren: 5
                mtaPerBatch: 500
                mtaPerStep: 1000
                mtaFetchSize: 5000
                login_name: billing
                user_id: 402
            pin_generate_analytics:
                mtaChildren: 5
                mtaPerBatch: 500
                mtaPerStep: 1000
                mtaFetchSize: 5000
                login_name: boc_client
                user_id: 414
            pin_gen_notifications:
                mtaChildren: 5
                mtaPerBatch: 500
                mtaPerStep: 1000
                mtaFetchSize: 5000
                login_name: bill_inv_pymt_sub
                user_id: 412
            pin_subscription:
                mtaChildren: 5
                mtaPerBatch: 500
                mtaPerStep: 1000
                mtaFetchSize: 5000
                login_name: root
                user_id: 1
            pin_rerate:
                mtaChildren: 5
                mtaPerBatch: 500
                mtaPerStep: 1000
                mtaFetchSize: 5000
                login_name: rerating
                user_id: 407
            pin_installments:
                mtaChildren: 5
                mtaPerBatch: 500
                mtaPerStep: 1000
                mtaFetchSize: 5000
                login_name: payments
                user_id: 404
            pin_deposits:
                mtaChildren: 5
                mtaPerBatch: 500
                mtaPerStep: 1000
                mtaFetchSize: 5000
                login_name: cust_mgnt
                user_id: 406
            pin_crypt:
                mtaChildren: 5
                mtaPerBatch: 500
                mtaPerStep: 1000
                mtaFetchSize: 5000
                login_name: crypt_utils
                user_id: 405
            pin_rate_change:
                login_name: rerating
                user_id: 407
            sample_handler:
                login_name: java_client
                user_id: 409
            pin_balance_transfer:
                mtaChildren: 5
                mtaPerBatch: 500
                mtaPerStep: 1000
                mtaFetchSize: 5000
                login_name: payments
                user_id: 404
            pin_collections:
                mtaChildren: 5
                mtaPerBatch: 500
                mtaPerStep: 1000
                mtaFetchSize: 5000
                login_name: collections
                user_id: 411
            pin_ra_check_thresholds:
                login_name: bill_inv_pymt_sub
                user_id: 412
            load_config:
                login_name: load_utils
                user_id: 413
            load_channel_config:
                login_name: load_utils
                user_id: 413
            exportapps:
                mtaChildren: 5
                mtaPerBatch: 500
                mtaPerStep: 1000
                mtaFetchSize: 5000
                login_name: load_utils
                user_id: 413
            pin_state_change:
                mtaChildren: 5
                mtaPerBatch: 500
                mtaPerStep: 1000
                mtaFetchSize: 5000
                login_name: cust_mgnt
                user_id: 406
            integrate_sync:
                login_name: root
                user_id: 1
            pin_unlock_service:
                login_name: cust_mgnt
                user_id: 406
            load_notification_event:
                login_name: java_client
                user_id: 409
            pin_remit:
                login_name: bill_inv_pymt_sub
                user_id: 412
            pin_bulk_adjust:
                mtaChildren: 5
                mtaPerBatch: 500
                mtaPerStep: 1000
                mtaFetchSize: 5000
                login_name: acct_recv
                user_id: 408
            pin_bill_handler:
                mtaChildren: 5
                mtaPerBatch: 500
                mtaPerStep: 1000
                mtaFetchSize: 5000
                login_name: java_client
                user_id: 409
            pin_ar_taxes:
                login_name: load_utils
                user_id: 413
            pin_event_extract:
                login_name: rerating
                user_id: 407
            pin_monitor:
                mtaChildren: 5
                mtaPerBatch: 500
                mtaPerStep: 1000
                mtaFetchSize: 5000
                login_name: cust_mgnt
                user_id: 406
            pin_ood_handler_process:
                mtaChildren: 5
                mtaPerBatch: 500
                mtaPerStep: 1000
                mtaFetchSize: 5000
                login_name: load_utils
                user_id: 413
            pin_ood_handler:
                mtaChildren: 5
                mtaPerBatch: 500
                mtaPerStep: 1000
                mtaFetchSize: 5000
                login_name: load_utils
                user_id: 413
            setup_scripts:
                login_name: load_utils
                user_id: 413
            pin_inv_doc_gen:
                bipServer: bipserver
                bipPort: 9502
                bipUsername: bipusername
                bipPassword: "" 
                schedulerDBServer: dbhostname
                schedulerDBPort: 1521
                schedulerDBService: schedulerdbservice
                schedulerDBUsername: dbuser
                schedulerDBServiceCredentials: ""
                jdbcPoolSize: 5
                jdbcPoolMaxSize: 10
                securityCredentials: ""
            pin_job_executor:
                rendering: false

        resourceLimits:
                limitsCpu: 2.2
                requestCpu: 2
                limitsMemory: 1228Mi
                requestMemory: 1024Mi

        hpaValues:
            minReplica: 2
            maxReplica: 4
            targetCpu: 80
            targetMemory: 80

    wsm:
        deployment:
            weblogic:
                isEnabled: false
                imageName: brm_wsm_wls
                initImageName: brm_wsm_wl_init
                imageTag: 15.0.0.0.0
                username: d2VibG9naWM=
                password: d2VibG9naWMxMjM=
                replicaCount: 1
                adminServerNodePort: 30611
                log_enabled: false
                minPoolSize: 1
                maxPoolSize: 8
                poolTimeout: 30000
                serverStartPolicy: IF_NEEDED
                monitoring:
                   isEnabled: false
                   imageRepository: ghcr.io/
                   # Name of the weblogic monitoring exporter image
                   imageName: oracle/weblogic-monitoring-exporter
                   imageTag: :2.1.4
                   # Image pull policy. One of Always, Never, IfNotPresent
                   imagePullPolicy: IfNotPresent
                   queries: []
                # Details of Identity Provider (IdP) managing OAuth 2.0 Tokens
                # for authenticating clients to access BRM WebServices
                idp:
                   # Chosen Identity Provider. Valid values: "OAM", "OAM11g", "IDCS"
                   vendor: OAM #Allowed values OAM/OAM11g/IDCS
                   # Base URL of the IdP server. For example, https://host:port
                   url: 
                   # Name of the Identity Domain. Mandatory if vendor = OAM
                   identityDomain:
                   # base64 encoded Id of the client with access to IdP's validate token API. Mandatory if vendor = IDCS
                   clientId:
                   # base64 encoded Secret for client  to access IdP's validate token API
                   clientSecret:

            tomcat:
                isEnabled: false
                replicaCount: 1
                imageName: brm_wsm
                imageTag: 15.0.0.0.0
                port: 8080
                nodePort: 30080
                log_enabled: true
                minPoolSize: 1
                maxPoolSize: 8
                poolTimeout: 30000
                basicAuth: false
                walletPassword: QzFnMmIzdTQ=

# This section is for forwarding the logs to a log management system
# Applicable only for services running forwarder app as sidecar
logging:
    isEnabled: false
    fluentd:
        imageName:
        resources:
            limits:
                memory: 200Mi
            requests:
                cpu: 100m
                memory: 200Mi
        conf:
            ocbrm:
                wsm:
            ocbc:
            ocboc:
            ocpdc:
            webhook:

webhook:
    # flag to enable webhook
    isEnabled: false
    # log directory for webhook application
    logPath:
    # log level, Available options are CRITICAL, ERROR, INFO, DEBUG, WARNING and NOTSET
    logLevel: INFO
    deployment:
        # webhook application image name
        imageName: webhook
        # webhook application image tag
        imageTag: 15.0.0.0.0
        # image pull policy
        imagePullPolicy: IfNotPresent
        # resouce configuration for webhook application container
        resources:
            limits:
                cpu: 500m
                memory: 2500Mi
            requests:
                cpu: 100m
                memory: 100Mi
    scripts:
        # scripts mount path
        mountPath: /u01/script
    # weblogic operator details
    wop:
        # namespace of weblogic operator
        namespace: operator
        # service account of weblogic operator
        sa: operator
        # internal operator certficate present in operator configmap
        internalOperatorCert:
    # extra alert details in json format
    jsonConfig:

ocpdc:

     # Setting true to will deploy PDC, setting false will undeploy/do not deploy PDC
     isEnabled: true
     # Linux Language
     lang: "en_US.UTF-8"
     # Linux Time-Zone
     tz: "UTC"
     # Please provide the hostpath for RRE/IE/BRE/SYNCPDC.
     # To use dynamic provisioner leave it empty. Default is empty.
     # Set permission as chown 1000:0 and chmod 777 
     pdcBrmVolHostPath: 
     # Please provide the storage size for pdc-brm-pv/pvc
     storageSize: 10Gi
     #PDC Pod-level security attributes and common container settings
     #Default configuration is present on oc-cn-helm-chart/pdc/securityContext.yaml
     enableSecurityContext: "false"
     # Deployment keys   
     deployment:
        fmw:
        #FMW image should be of 12.2.1.4 with OL8-JDK8
          imageRepository: "container-registry.oracle.com/"
          imageName: "middleware/fmw-infrastructure_cpu"
          imageTag: ":12.2.1.4-jdk8-ol8-240113"
        imageName: "pdc"
        # For non-empty tag, ":" MUST be perpended
        imageTag: ":15.0.0.0.0"
        imagePullPolicy: IfNotPresent
     # Define rules to schedule PDC PODs on particular node by using nodeSelector or affinity.
     # Applicable for PDC-App/RRE/BRE/SyncPDC/Import-Export PODS.
     # To provide different scheduling rules for RRE/BRE/SyncPDC/Import-Export PODs,
     # Please use nodeSelector or affinity key in Values.ocpdc.configEnv.transformation/
     # Values.ocpdc.configEnv.syncPDC/Values.ocpdc.configEnv.importExport, as these 
     # keys will take precedence than Values.ocpdc.nodeSelector or Values.ocpdc.affinity.
     nodeSelector: {}
     affinity: {}
     # Weblogic Operator 
     wop:
        # Mandatory: Name of WebLogic Server domain (should be same as Job Chart value)
        domainUID:  "pdc-domain"
        # To enable Vertical Pod autoscaling for PDC DOMAIN POD, set isVPAEnabled to true.
        # Default is present in oc-cn-helm-chart/pdc/vpa_values.yaml        
        isVPAEnabled:  "false"
     # Environment/Configuration keys    
     configEnv:
        name: "pdc-configmap-env"
        # To enable Vertical Pod autoscaling for RRE/BRE/SyncPDC/JobIE PODs, set isVPAEnabled to true.
        # Default is present in oc-cn-helm-chart/pdc/vpa_values.yaml
        isVPAEnabled: "false"
        # PDC and Cross Reference DB Host-name, should be same as job-chart
        dbHostName: 192.168.161.128
        # PDC and Cross Reference DB Port, should be same as job-chart
        dbPort: 1521
        # PDC and Cross Reference DB Service, should be same as job-chart
        dbService: CNLAB
        # Cross Reference DB SSL Mode, should be same as job-chart
        dbSSLMode: NO
        # Transformation keys
        transformation:
            # Mandatory: Log Level, values can be SEVERE/WARNING/INFO/CONFIG/FINE/FINER/FINEST
            logLevel: "FINEST"
            # Mandatory: RRE/BRE Master Log File Size or Limit
            logFileSize: 500000
            # Mandatory: RRE/BRE Master Log File Count
            logFileCount: 10
            # Mandatory: Presist RRE/BRE Transaction Logs setting, Set one of the following
            # enabled/all,disabled,failed
            # enabled/all: Transcation logs will be presisted, disabled: Transcation logs will not be presisted.
            # failed: Only Failed Transcation logs will be presisted.
            persistTransactionLogs: "all"
            # Mandatory: Memory argument, Please double qoute the value.
            MEM_ARGS: "-Xms1024m -Xmx2048m -XX:CompileThreshold=8000"
            # Mandatory: Specifies the persistence of output files generated by transformation engine
            # enabled - keep the output & payload files in out directory. Not Recommended!
            # disabled - do not keep the output & payload files
            persistOutFiles: "enabled"
            # Mandatory: Set true to upgrade from previous version to 12PS version or while deploying 12PS IP.
            upgrade: "false"
            # Schedule Rule to deploy RRE and BRE PODs on particular node by using nodeSelector or affinity
            nodeSelector: {}
            affinity: {}
        # Seed Data keys
        seedData:
            # Mandatory: Load Sample Balance Element after successful PDC deployment.
            # Note Balance Element will not be overwritten if already exists.
            BE: "true"
            # Mandatory: Load Sample RUM after successful PDC deployment.
            # Note RUM will not be overwritten if already exists.
            RUM: "true"
        # PDC Import-Export JOB keys 
        importExport:
            # ImportExport operation, below are valid values
            # export/import/publish/keep/deleteprofile(or dp)/type(or t). 
            # please dont prefix with -
            IE_Operation:
            # ImportExport Component/Object, below are valid values
            # config/pricing/metadata/profile/customfields/brmobject/all.
            # Please do not prefix with -
            IE_Component:
            # ImportExport directory or filename (In-case of Import/DeleteProfile(or dp) XML file should be
            # placed in HostPath mentioned in "ocpdc.volMt.pdcIEHostPath",or in  pdc-ie-pvc please do not prefix with -
            # Please provide below ownership and permission on the directory/sub directory or file.
            # chown 1000:0  and chmod 755 
            IE_File_OR_Dir_Name: 
            # Extra CMD Line Arguments for ImportExport Operation apart from Operation/Component/FileName, Please double quote the values
            extraCmdLineArgs: 
            # Mandatory: Log Level, values can be SEVERE/WARNING/INFO/CONFIG/FINE/FINER/FINEST
            # Applicable for both SEEDDATA/IE JOB
            logLevel: "WARNING"
            # Log File Size/Limit. Default 1 MB (1048576)
            logSize: "1048576"
            # Log File Count.
            logCount: "100"
            # Presist Import-Export Logs setting, Set one of the following,
            # enabled/all,disabled,failed
            # enabled/all: IE logs will be presisted, disabled: IE logs will not be presisted.
            # failed: Only Failed IE logs will be presisted.
            persistIELogs: "failed"           
            # Schedule Rule to deploy Import-Export POD on particular node by using nodeSelector or affinity
            nodeSelector: {}
            affinity: {}
        # SyncPDC keys
        syncPDC:
            # Mandatory: Set true to upgradeFromPS2 from PS2 to PS4 or higher.
            # To support 5G
            upgradeFromPS2: "false"
            # Mandatory: Log Level, values can be SEVERE/WARNING/INFO/CONFIG/FINE/FINER/FINEST.
            logLevel: "FINEST"
            # Mandatory: SyncPdc Log File Size or Limit.
            logFileSize: "20000"
            # Mandatory: SyncPdc Log File Count.
            logFileCount: "10"
            # Mandatory: Memory argument, Please double qoute the value.
            MEM_ARGS: "-Xms1024m -Xmx2048m -XX:CompileThreshold=8000"
            #Mandatory:  Specifies whether to skip synchronization of pipeline configuration data during SyncPDC, 
            # where SkipOption is either true or false
            # This skipBREMigration is ignored when ECE is enabled in PDC system".
            skipBREMigration:  "false"
            # Mandatory: SyncPDC processing recurring scheduling. Please double quotes the value.
            # startAt:  SyncPDC to be started at the time on the day job is submitted.
            # Entry is in HH:MM format, where HH is the hours between 0-23, and MM minutes between 00-59. -->
            syncPDCStartAt: "12:20"
            # Mandatory: Interval: the frequency for syncPDC to be run. Please double quotes the value.
            # Entry is in N:U format where N is a valid number and U is the unit.
            # Valid units are: D (Daily), H (Hour), M(Minute).
            # e.g. 2:D means to run every other day. Note: 24:H is not the same as 1:D due to daylight saving time.
            syncPDCInterval: "1:D"
            # Mandatory: Please copy the Enrichment file in "syncpdc" folder corresponding mount path (PVC Name: "pdc-brm-pvc").
            # Just provide the file name here, no need of the path.
            # Applicable both PDC deployment time as well on-demand syncPdc run time.
            # Set permission as chown 1000:0 and chmod 777  
            enrichmentFileName: 
            # Mandatory: Setting true will deploy and run SyncPDC as POD once PDC deployed.
            # Setting to false, will not deploy SyncPDC as POD.
            runSyncPDC:  "true"
            # Schedule Rule to deploy SyncPDC POD on particular node by using nodeSelector or affinity
            nodeSelector: {}
            affinity: {}
        # PDC Monitoring keys
        monitoring:
            # setting true will deploy the wls-exporter.war for monitoring and collecting weblogic metrics.
            isEnabled: false
            imageRepository: "ghcr.io/"
            imageName: "oracle/weblogic-monitoring-exporter"
            imageTag: ":2.0.2"
            queries: []
            prometheus:
                operator:
                    # This flag can be set to true if the Prometheus is of Operator type
                    # This approach uses a ServiceMonitor to scrape metrics
                    isEnabled: false
                    #Namespace where Prometheus Operator is deployed
                    namespace: monitoring
     # PDC Secret Password keys
     secretValue:
        name: "pdc-secret-env"
        # PDC Application Wallet and PDC BRM Integration Wallet password
        walletPassword: UGRjQDEyMzQ= 

ocpdcrsm:
    isEnabled: false
    labels:
        name: "pdcrsm"
    deployment:
        deadlineSeconds: 60
        revisionHistLimit: 10
        imageName: "oracle/pdcrsm"
        # For non-empty tag, ":" MUST be prepended
        imageTag: ":15.0.0.0.0"
        imagePullPolicy: IfNotPresent
        rootLogLevel: INFO
        appLogLevel: INFO
        JAVA_OPTS: -Djava.util.logging.manager=org.apache.logging.log4j.jul.LogManager
    configEnv:
        name: "pdcrsm-configmap-env"
        # PDC REST Services Manager Listener Port, default 8080
        rsmListenerPort: 8080
        # PDC REST Services Manager Base URL
        baseUrl:
        # Whether or not to use t3s for the connection to PDC, default true
        useT3s: true
        # The path to a JKS truststore for use with outbound TLS connections, if required
        jksTrustStorePath:
        # Security Enable, default false
        securityEnabled:
        #Security type is OAM/IDCS; By default application connects to IDCS for security.
        securityType:
        idcs:
            # PDC REST Services Manager inbound Oauth base URI
            inboundOauthUri:
            # PDC REST Services Manager Client ID for inbound Oauth
            inboundOauthClientId:
            #  Frontend URI for inbound Oauth
            inboundOauthFrontendUri:
            # Primary Audience for inbound Oauth
            inboundOauthAudience:
            # Proxy Host for inbound Oauth, if required
            inboundOauthProxyHost:
            # Scope required to access the TMF620 Publish Event endpoint for inbound Oauth
            inboundOauthPubEventScope:
            # Scope required to access the metrics endpoint for inbound Oauth
            inboundOauthMetricsScope:
        oam:
            # OAM Domain Name
            domainName:
            # OAM OAuth Server Name
            audience:
            # OAM OAuth Token Endpoint
            endpointURL:
            # OAM OAuth Introspect Endpoint
            introspectendpointuri:
            # OAM OAuth Scope Audience
            scopeaudience:
            # OAM OAuth Authorization Endpoint
            authorizationendpointuri:
            # OAM OAuth Proxy Host
            proxyhost: ""
            # OAM OAuth Frontend URI
            frontenduri:
        # Whether or not to enable tracing, default false
        isTracingEnabled: false
        # Whether or not to enable TLS encryption for RSM webservices, default false
        isTlsEnabled: false
        # The path to the TLS certificate bundle relative to this helm chart; certificate must be in PKCS12 format
        tlsCertificatePath:
        # HTTP client configuration
        httpClients:
            # Regular expression used to match outbound hosts to configuration sets
            - urlRegex: ""
              security:
                  oauth2:
                      tokenEndpoint: ""
                      clientId: ""
                      scope: ""
                      grantType: "client_credentials"
        monitoring:
          prometheus:
            # This flag can be set to true if the Prometheus is of Operator type
            # This approach uses a ServiceMonitor to scrape metrics
            isEnabled: false
            # Namespace where Prometheus Operator is deployed
            namespace: monitoring
    secretValue:
        name: "pdcrsm-secret-env"
        # PDC REST Services Manager Client Secret for inbound Oauth
        inboundOauthClientSecret:
        # Optional base64-encrypted passphrase for the TLS certificate
        tlsCertificatePassphrase:
        # HTTP client configuration
        httpClients:
            # Regular expression used to match outbound hosts to configuration sets
            - urlRegex: ""
              security:
                  oauth2:
                      clientSecret: ""
    service:
        name: "pdcrsm"
        type: "NodePort"
        nodePort: 31000

ocboc:

    # Logging level at which application logs must be captured in log files
    # Changes level only for weblogic server logs
    # Possible values: SEVERE, WARNING, INFO, CONFIG, FINE, FINER, FINEST, ALL
    appLogLevel: INFO
    # Values used for Business Opearations Center application and its domain
    boc:
        # A boolean value to add (true) or remove (false) Business Opearations Center and
        # all its associated resources
        isEnabled: false
        deployment:
            app:
                # Name of the Business Opearations Center
                imageName: boc
                # Tag associated with image, generally, patch-set number
                # For non-empty tag, ":" MUST be prepended
                imageTag: :15.0.0.0.0
                # Image pull policy. One of Always, Never, IfNotPresent
                imagePullPolicy: IfNotPresent
            fmw:
                # Repository from where FMW Infrastructure image must be pulled
                imageRepository: container-registry.oracle.com/
                # Name of the FMW Infrastructure image
                imageName: middleware/fmw-infrastructure_cpu
                # Tag associated with image, generally, patch-set number
                # For non-empty tag, ":" MUST be prepended
                imageTag: :12.2.1.4-jdk8-ol8
                # Image pull policy. One of Always, Never, IfNotPresent
                imagePullPolicy: IfNotPresent
        configEnv:
            # Host name or IP Address of Database Server
            dbHost: 192.168.161.128
            # Port number of Database Server
            dbPort: 1521
            # Service Name which identifies DB
            dbServiceName: CNLAB
            # Specify the SSLMode : "NO", "ONE_WAY" 
            dbSSLMode: NO
            # Specify the DB SSL wallet type: sso
            dbWalletType: 
            # Container's port for access to WebLogic Domain over HTTP
            httpPort: 7011
            # Create an OPSS or non-OPSS domain. One of true, false
            # Production setup must use OPSS (true) only
            isOPSS: false
            # Private Key Alias of the keystore
            keystoreAlias:
            # Runs schema upgrade. One of true, false
            runUpgrade: false
        infranet:
            user:
                # Login name of service having permissions to access BRM
                login: 'boc_client.0.0.0.1'
                # Poid Type of service having permissions to access BRM
                serviceType: '/service/admin_client'
                # Poid Id of service having permissions to access BRM
                serviceId: 415
            connectionpool:
                minSize: 25
                maxSize: 50
            logLevel: 3
            addOnProperties: ""
        secretVal:
            # Password to wallet storing sensitive data for BRM connection
            walletPassword: QnJtMTIzNCM=
        wop:
            # Name of the domain
            # Used as prefix to tag related objects
            domainUID: boc-domain
            # Location within container where domain is created
            domainRootDir: /shared
            # Total number of managed servers forming the cluster
            totalManagedServers: 5
            # Number of managed servers to initially start for the domain
            initialServerCount: 2
            # NodePort where admin-server's http service will be accessible
            adminChannelPort: 30811
            # serverStartPolicy legal values are "NEVER", "IF_NEEDED", or "ADMIN_ONLY"
            # This determines which WebLogic Servers the Operator will start up when it discovers this Domain
            # - "NEVER" will not start any server in the domain
            # - "ADMIN_ONLY" will start up only the administration server (no managed servers will be started)
            # - "IF_NEEDED" will start all non-clustered servers, including the administration server and clustered servers up to the replica count
            serverStartPolicy: 'IF_NEEDED'
            # Force rolling restart of all server pods. Change to any value other than current to trigger the action.
            restartVersion: "1"
            # Force domain introspection on change in domain configuration. Change to any value other than current to trigger the action.
            introspectVersion: "1"
        monitoring:
            isEnabled: false
            imageRepository: ghcr.io/
            # Name of the weblogic monitoring exporter image
            imageName: oracle/weblogic-monitoring-exporter
            imageTag: :2.1.0
            # Image pull policy. One of Always, Never, IfNotPresent
            imagePullPolicy: IfNotPresent
            queries: []
            # Duration at which Prometheus scrapes the target
            scrapeInterval: 2s
            # This flag can be set to true if the Prometheus is of Operator type
            # This approach uses a ServiceMonitor to scrape metrics
            operator:
                isEnabled: false
        extensions:
            # Name of configmap containing scripts to execute additional steps to configure domain and/or application
            scriptsConfigName: ""
        # Define rules for scheduling WebLogic Server pods on particular nodes
        # either by using nodeSelector or affinity
        nodeSelector: {}
        affinity: {}
        # Details to inject at domain server pod level
        serverPod: {}
        #serverPod:
        #    podSecurityContext:
        #        fsGroup: 1000
        #        runAsUser: 1000

ocbc:

    # Logging level at which application logs must be captured in log files
    # Changes level only for weblogic server logs
    # Possible values: SEVERE, WARNING, INFO, CONFIG, FINE, FINER, FINEST, ALL
    appLogLevel: INFO
    # Values used for Billing Care application and its domain
    bc:
        # A boolean value to add (true) or remove (false) Billing Care and
        # all its associated resources
        isEnabled: false
        deployment:
            app:
                imageName: billingcare
                # Tag associated with image, generally, patch-set number
                # For non-empty tag, ":" MUST be prepended
                imageTag: :15.0.0.0.0
                # Image pull policy. One of Always, Never, IfNotPresent
                imagePullPolicy: IfNotPresent
            fmw:
                # Repository from where FMW Infrastructure image must be pulled
                imageRepository: container-registry.oracle.com/
                # Name of the FMW Infrastructure image
                imageName: middleware/fmw-infrastructure_cpu
                # Tag associated with image, generally, patch-set number
                # For non-empty tag, ":" MUST be prepended
                imageTag: :12.2.1.4-jdk8-ol8
                # Image pull policy. One of Always, Never, IfNotPresent
                imagePullPolicy: IfNotPresent
            sdk:
                # Name of the billingcare sdk image
                imageName:
                # Tag associated with image, generally, patch-set number
                # For non-empty tag, ":" MUST be prepended
                imageTag:
                # Image pull policy. One of Always, Never, IfNotPresent
                imagePullPolicy: IfNotPresent
        sdk:
            # A boolean value to additionally deploy your customizations to
            # override application behavior
            isEnabled: false
            # Name of SDK to appear in deployment list
            deployName: BillingCareCustomizations
        configEnv:
            # Container's port for access to WebLogic Domain over HTTP
            httpPort: 7011
            # Create an OPSS or non-OPSS domain. One of true, false
            # Production setup must use OPSS (true) only
            isOPSS: true
            # Private Key Alias of the keystore
            keystoreAlias:
            # Specify the SSLMode : "NO", "ONE_WAY"
            dbSSLMode: NO
            # Specify the DB SSL wallet type: SSO
            dbWalletType:
            # URL to BIP Server
            # Example: http(s)://__HOST__:__PORT__/xmlpserver/services/PublicReportService_v11
            bipUrl: __BIP_URL__
            # Name of user with access to BIP instance
            bipUserId: __BIP_USER_ID__
        infranet:
            user:
                # Login name of service having permissions to access BRM
                login: 'bc_client.0.0.0.1'
                # Poid Type of service having permissions to access BRM
                serviceType: '/service/admin_client'
                # Poid Id of service having permissions to access BRM
                serviceId: 416
            connectionpool:
                minSize: 25
                maxSize: 50
            logLevel: 3
            # URL where user will be redirected after logout from the application
            ssoLogoutURL:
            addOnProperties: ""
        secretVal:
            # Password to wallet storing sensitive data for BRM connection
            walletPassword: QnJtMTIzNCM=
            # Password of the BIP Instance (configEnv.bipUserId)
            bipPassword:
        wop:
            # Name of the domain
            # Used as prefix to tag related objects
            domainUID: billingcare-domain
            # Location within container where domain is created
            domainRootDir: /shared
            # Total number of managed servers forming the cluster
            totalManagedServers: 5
            # Number of managed servers to initially start for the domain
            initialServerCount: 2
            # NodePort where admin-server's http service will be accessible
            adminChannelPort: 30711
            # serverStartPolicy legal values are "NEVER", "IF_NEEDED", or "ADMIN_ONLY"
            # This determines which WebLogic Servers the Operator will start up when it discovers this Domain
            # - "NEVER" will not start any server in the domain
            # - "ADMIN_ONLY" will start up only the administration server (no managed servers will be started)
            # - "IF_NEEDED" will start all non-clustered servers, including the administration server and clustered servers up to the replica count
            serverStartPolicy: 'IF_NEEDED'
            # Force rolling restart of all server pods. Change to any value other than current to trigger the action.
            restartVersion: "1"
            # Force domain introspection on change in domain configuration. Change to any value other than current to trigger the action.
            introspectVersion: "1"
        monitoring:
            isEnabled: false
            imageRepository: ghcr.io/
            # Name of the weblogic monitoring exporter image
            imageName: oracle/weblogic-monitoring-exporter
            imageTag: :2.1.0
            # Image pull policy. One of Always, Never, IfNotPresent
            imagePullPolicy: IfNotPresent
            queries: []
            # Duration at which Prometheus scrapes the target
            scrapeInterval: 2s
            # This flag can be set to true if the Prometheus is of Operator type
            # This approach uses a ServiceMonitor to scrape metrics 
            operator:
                isEnabled: false
        extensions:
            # Name of configmap containing scripts to execute additional steps to configure domain and/or application
            scriptsConfigName: ""
        # Define rules for scheduling WebLogic Server pods on particular nodes
        # either by using nodeSelector or affinity
        nodeSelector: {}
        affinity: {}
        # Details to inject at domain server pod level
        serverPod: {}
        #serverPod:
        #    podSecurityContext:
        #        fsGroup: 1000
        #        runAsUser: 1000        
    # Values used for Billing Care REST API and its domain
    bcws:
        # A boolean value to add (true) or remove (false) Billing Care REST API
        # and all its associated resources
        isEnabled: false
        deployment:
            app:
                imageName: bcws
                # Tag associated with image, generally, patch-set number
                # For non-empty tag, ":" MUST be prepended
                imageTag: :15.0.0.0.0
                # Image pull policy. One of Always, Never, IfNotPresent
                imagePullPolicy: IfNotPresent
            fmw:
                # Repository from where FMW Infrastructure image must be pulled
                imageRepository: container-registry.oracle.com/
                # Name of the FMW Infrastructure image
                imageName: middleware/fmw-infrastructure_cpu
                # Tag associated with image, generally, patch-set number
                # For non-empty tag, ":" MUST be prepended
                imageTag: :12.2.1.4-jdk8-ol8
                # Image pull policy. One of Always, Never, IfNotPresent
                imagePullPolicy: IfNotPresent
            sdk:
                # Name of the billingcare sdk image
                imageName:
                # Tag associated with image, generally, patch-set number
                # For non-empty tag, ":" MUST be prepended
                imageTag:
                # Image pull policy. One of Always, Never, IfNotPresent
                imagePullPolicy: IfNotPresent
        sdk:
            # A boolean value to additionally deploy your customizations to
            # override application behavior
            isEnabled: false
            # Name of SDK to appear in deployment list
            deployName: BillingCareCustomizations
        configEnv:
            # Container's port for access to WebLogic Domain over HTTP
            httpPort: 7011
            # Create an OPSS or non-OPSS domain. One of true, false
            # Production setup must use OPSS (true) only
            isOPSS: true
            # Private Key Alias of the keystore
            keystoreAlias:
            # Specify the SSLMode : "NO", "ONE_WAY"
            dbSSLMode: NO
            # Specify the DB SSL wallet type: SSO
            dbWalletType:
            # URL to BIP Server
            # Example: http(s)://__HOST__:__PORT__/xmlpserver/services/PublicReportService_v11
            bipUrl: __BIP_URL__
            # Name of user with access to BIP instance
            bipUserId: __BIP_USER_ID__
        infranet:
            user:
                # Login name of service having permissions to access BRM
                login: 'bc_client.0.0.0.1'
                # Poid Type of service having permissions to access BRM
                serviceType: '/service/admin_client'
                # Poid Id of service having permissions to access BRM
                serviceId: 416
            connectionpool:
                minSize: 25
                maxSize: 50
            logLevel: 3
            # Details of Identity Provider (IdP) managing OAuth 2.0 Tokens
            # for authenticating clients to access Billing Care REST API
            idp:
                # Chosen Identity Provider. Valid values: "OAM", "IDCS"
                vendor:
                # Base URL of the IdP server. For example, https://host:port
                url:
                # Resource Server and Scope created in your IdP for Billing Care REST API
                resourceServerAndScope:
                # Name of the Identity Domain. Mandatory if vendor = OAM
                identityDomain:
                # Id of the client with access to IdP's validate token API. Mandatory if vendor = IDCS
                clientId:
            addOnProperties: ""
        secretVal:
            # Password to wallet storing sensitive data for BRM connection
            walletPassword: Q24xMjM0Iw==
            # Password of the BIP Instance (configEnv.bipUserId)
            bipPassword:
            infranet:
                idp:
                    # Secret for client (infranet.idp.clientId) to access IdP's validate token API
                    clientSecret:
        wop:
            # Name of the domain
            # Used as prefix to tag related objects
            domainUID: bcws-domain
            # Location within container where domain is created
            domainRootDir: /shared
            # Total number of managed servers forming the cluster
            totalManagedServers: 5
            # Number of managed servers to initially start for the domain
            initialServerCount: 2
            # NodePort where admin-server's http service will be accessible
            adminChannelPort: 30721
            # serverStartPolicy legal values are "NEVER", "IF_NEEDED", or "ADMIN_ONLY"
            # This determines which WebLogic Servers the Operator will start up when it discovers this Domain
            # - "NEVER" will not start any server in the domain
            # - "ADMIN_ONLY" will start up only the administration server (no managed servers will be started)
            # - "IF_NEEDED" will start all non-clustered servers, including the administration server and clustered servers up to the replica count
            serverStartPolicy: 'IF_NEEDED'
            # Force rolling restart of all server pods. Change to any value other than current to trigger the action.
            restartVersion: "1"
            # Force domain introspection on change in domain configuration. Change to any value other than current to trigger the action.
            introspectVersion: "1"
        monitoring:
            isEnabled: false
            imageRepository: ghcr.io/
            # Name of the weblogic monitoring exporter image
            imageName: oracle/weblogic-monitoring-exporter
            imageTag: :2.1.0
            # Image pull policy. One of Always, Never, IfNotPresent
            imagePullPolicy: IfNotPresent
            queries: []
            # Duration at which Prometheus scrapes the target
            scrapeInterval: 2s
            # This flag can be set to true if the Prometheus is of Operator type
            # This approach uses a ServiceMonitor to scrape metrics
            operator:
                isEnabled: false
        extensions:
            # Name of configmap containing scripts to execute additional steps to configure domain and/or application
            scriptsConfigName: ""
        # Define rules for scheduling WebLogic Server pods on particular nodes
        # either by using nodeSelector or affinity
        nodeSelector: {}
        affinity: {}
        
        # Details to inject at domain server pod level
        serverPod: {}
        #serverPod:
        #    podSecurityContext:
        #        fsGroup: 1000
        #        runAsUser: 1000

ocpcc:

    pcc:
        isEnabled: false
        labels:
            # String used for forming names of PCC
            # related resources
            name: pcc
            version: 15.0.0.0.0
        deployment:
            # Maximum time in seconds for a deployment to make progress before it is considered to be failed
            deadlineSeconds: 1200
            # The number of old ReplicaSets to retain to allow rollback
            revisionHistLimit: 10
            # Name of the pcc image
            imageName: oracle/pcc
            # Tag associated with image, generally, patch-set number
            # For non-empty tag, ":" MUST be prepended
            imageTag: :15.0.0.0.0
            probe:
                # Configurations for readiness probe
                ready:
                    # Number of seconds after the container has started before probe is initiated
                    delayInSec: 200
                    # How often (in seconds) to perform the probe 
                    intervalInSec: 10
                    # Minimum consecutive failures for the probe to be considered failed
                    maxAttempts: 100
            volMntKeyStore:
                # Name of keystore volume; used only for mapping in YAML spec files
                name: pcc-keystore-volume
                # Path within the container where keystores will appear
                mountPath: /u01/app/share/keystore
            volMntLogs:
                # Name of log volume; used only for mapping in YAML spec files
                name: pcc-logs-volume
                # Path within the container where log files will appear
                mountPath: /u01/logs
            volMntMetrics:
                name: pcc-metrics-volume
                mountPath: /u01/metrics
        configEnv:
            # Name of this configmap
            name: pcc-configmap-env
            # Container's port for access to WebLogic Domain over HTTP
            httpPort: 7011
            # Container's port for access to WebLogic Domain over HTTPS
            httpsPort: 7012
            # Enable SSL in WebLogic Domain. One of true, false
            isSSLEnabled: false
            # File type of SSL Identity and Trust store
            keyStoreType: PKCS12
            # Private Key Alias of the keystore
            keyStoreAlias: __KEYSTORE_ALIAS__
            # File name of the Identity Keystore
            keyStoreIdentityFileName: identity.p12
            # File name of the Trust Keystore
            keyStoreTrustFileName: trust.p12
            # Mode to use when starting the server. One of dev, prod
            serverStartMode: dev
            # User who will be granted Administrator rights to WebLogic Domain
            adminUser: weblogic
            # Container's port for access to WebLogic Domain over Administration Port
            adminPort: 9012
            # Separate administration traffic from application traffic. One of true, false
            isAdminPortEnabled: false
            # Database connection details where OPSS schema will be created
            # DB Connection URL, valid formats:
            # SSL enabled DB: (DESCRIPTION=(ADDRESS=(PROTOCOL=tcps)(HOST=__DB_HOST__)(PORT=__DB_SSL_PORT__))(CONNECT_DATA=(SERVICE_NAME=__DB_SERVICE_NAME__)))
            # SSL disabled DB: __DB_HOST__:__DB_PORT__/__DB_SERVICE_NAME__ 
            rcuJdbcURL: 192.168.161.128:1521/CNLAB 
            # Database adminstrator user name
            rcuSysDBAUser: 
            # Prefix for schemas of OPSS
            rcuPrefix: PCCJRF12
            # Drops existing OPSS schema already exists if true. One of true, false
            rcuRecreate: false
            #DBA role to create RCU schema
            rcuDBARole: 
            #Additional arguments to create rcu
            rcuArgs: " "
            # Components to install using the OUI Installer in a container
            featureSets: PCC:15.0.0.0.0
            installType: Custom
            # Poid Id of service having permissions to access BRM
            brmServicePoidId: 1
            # Poid Type of service having permissions to access BRM
            brmServiceType: /service/admin_client
            # Login name of service having permissions to access BRM
            brmLogin: pcc_client.0.0.0.1
            # Server in WebLogic domain where application must be deployed
            targetServer: AdminServer
            # JavaPCM Log Level. One of 1(Error), 2(Warning), 3(Debug)
            infranetLogLevel: 2
            # Pipeline configuration center user
            pccUser: pccuser
            # Set it to "true" if this service will use SSO and must be configured with SAML 2.0
            isSSOEnabled: false            
            # Name of SAML Asserter
            samlAsserterName: samlPCCAsserter
            # Base URL that is used to construct endpoint URLs, typically, Load Balancer host and port at which the server is visible externally.
            # Must be appended with "/saml2"
            # For example, https://LB_HOST:LB_PORT/saml2            
            ssoPublishedSiteURL:
            # URL to which unsolicited authentication responses are sent if they do not contain an accompanying target URL
            ssoDefaultURL:
            # URL where user will be redirected after logout from the application
            ssoLogoutURL:
        secretVal:
            # Name of this secret
            name: pcc-secret-vol
            # Password of the WebLogic Domain's administrative user (configEnv.adminUser)
            adminPassword: 
            # Password to wallet storing sensitive data for BRM connection
            walletPassword: 
            # Password of the Database Administrator (configEnv.rcuSysDBAUser)
            rcuSysDBAPassword: 
            # Password of the OPSS schema (configEnv.rcuPrefix)
            rcuSchemaPassword: 
            # KeyPass of Identity Keystore
            keyStoreIdentityKeyPass: 
            # StorePass of Identity Keystore
            keyStoreIdentityStorePass: 
            # StorePass of Trust Keystore
            keyStoreTrustStorePass: 
            # Pipeline weblogic user password
            pccUserPassword: 
        secretKeyStore:
            # A Secret object for keystore files
            # Name of this secret
            name: pcc-secret-keystores
        storageClass:
            name: pcc-file-vol
        metrics:
            configMap:
              name: pcc-metrics-configmap
            # Flag to enable metrics which will be used for monitoring
            enabled: false
        service:
            # Name of the Service Object
            name: pcc-service
            # Type of the service
            # NodePort allows access to application from outside
            type: LoadBalancer
        monitoring: 
            prometheus: 
                  # This flag can be set to true if the Prometheus is of Operator type
                  # This approach uses a ServiceMonitor to scrape metrics                   
                  isEnabled: false
                  # Namespace where Prometheus Operator is deployed
                  namespace: monitoring

ocrsm:

    rsm:
        isEnabled: false
        labels:
            # String used for forming names of BRM Rest Services Manager
            name: brm-rest-services-manager
            version: 15.0.0.0.0
        deployment: 
            # Maximum time in seconds for a deployment to make progress before it is considered to be failed
            deadlineSeconds: 1200
            # The number of old ReplicaSets to retain to allow rollback
            revisionHistLimit: 10
            imageName: oracle/brm-rest-services-manager
            # Tag associated with image, generally, patch-set number
            # # For non-empty tag, ":" MUST be prepended
            imageTag: :15.0.0.0.0
            sdk:
                # SDK image name 
                imageName: brm-rest-services-manager-extension
                # SDK image tag, For non-empty tag, ":" MUST be prepended
                imageTag: :1
            probe:
                # Configurations for readiness probe
                ready:
                    # Number of seconds after the container has started before probe is initiated
                    delayInSec: 30
                    # How often (in seconds) to perform the probe
                    intervalInSec: 10
                    # Minimum consecutive failures for the probe to be considered failed
                    maxAttempts: 100
            # Name of keystore volume which holds BRM Rest Services Manager SSL certificate       
            volMntKeyStore:
                name: rsm-keystore-volume
            # Name of log volume mount,where log files are mounted
            volMntLogs:
                name: rsm-logs-volume
            # Name of SDK volume mount, where SDK jar is mounted
            volMntSDK:
                name: rsm-sdk-volume
            # Name of volume mount which holds all password as secret
            volMntSecretEnv:
                name: rsm-secret-env
            # Name and path of volume mount which holds server security
            volMntSecurity:
                name: server-properties-volume-mnt
                mountPath: /u01/oracle/app/restapi/security
            # Name and path of volume mount which holds application's extenal properties
            volMntAppExternalProperties:
                name: app-external-properties-volume-mnt
                mountPath: /u01/oracle/app/restapi/configuration/app
        configEnv:
            # Name of this configmap
            name: brm-rest-services-manager-env-configmap
            # Http container port on which application will be deployed
            httpPort: 30000
            # Https container port on which application will be deployed
            httpsPort: 30001
            # BRM Rest Services Manager SSL certificate file name,Mandatory if security is enabled
            rsmCertificateFileName: __RSM_CERTIFICATE_FILE_NAME__
            # Trust store file name
            trustStoreFileName:
            # BRM Root Login
            brmLogin: rsm.0.0.0.1
            # BRM Service Type
            brmServiceType: /service/admin_client
            # BRM Service POID
            brmServicePoidId: 1
            # BRM SSL Wallet File Name
            brmSSLWalletFileName: cwallet.sso
            # iBRM Rest Services Manager Extension Jar Filename ex: rsm-extension.jar
            rsmExtensionJar: 
            # BIP URL
            bipUrl: __BIP_URL__
            # BIP User
            bipUserId: __BIP_USER_
            # BRM Rest Services Manager Tracing Flag: true if Enabled false otherwise
            isTracingEnabled: false
            #Host name of the zipkin tracing collector
            zipkinHostName:
            #Port of the zipkin tracing collector
            zipkinPort:
            #Protocol of the zipkin tracing collector (e.g. http, https)
            zipkinProtocol:
            # BRM Rest Services Manager Base URL
            baseURL:
            # BRM RSM Cache Support: ‘true’ if enabled else ‘false’(default).
            cacheEnabled: false
            # BRM RSM Cache Type: set ‘private’(default) if not allowing proxies(shared cache) to cache the response, ‘public’ otherwise.
            cacheType: private
            # BRM RSM Cache max age: Time in seconds(default 24hr) until the response remains fresh(served from cache) after the response is generated.
            cacheMaxAge: 86400
            # BRM RSM Cache Services: RSM services that need to provide cache support. By default ‘describe’ service to support cache, where ‘describe’ is the resource locator for the describe api in the REST API Path. Multiple services with comma separated values can be provided if, needed.
            cacheServices: describe
            # BRM Rest Services Manager Security Flag: true if Enabled false otherwise
            securityEnabled: true
            #Security type is OAM/IDCS; By default application connects to IDCS for security.
            securityType: IDCS
            idcs:
                # IDCS URL
                idcsURI: __IDCS_URL__
                # Client Id for token based authentication(IDCS Client ID)
                clientID: __CLIENT_ID__
                # IDCS Proxy Host
                proxyHost:
                # IDCS Scope Audience,Primary Audience URL is a mandatory entry while creating client in IDCS
                # same has to be populated here for ex:http://localhost:8080/ 
                scopeAudience: __SCOPE_AUDIENCE__
                # IDCS Audience ,Secondary Audience is an optional attribute in IDCS,If Secondary Audience is 
                # given in IDCS same should be populated here otherwise populate Primary Audience here
                audience: __AUDIENCE_
            oam:
                # OAM domain name
                domainName: __OAM_OAUTH_DOMAINNAME__
                # OAM OAuth server name
                audience: __OAM_OAUTH_SERVERNAME__
                # OAM OAuth token endpoint
                endpontURL: __OAM_OAUTH_TOKENENDPOINT__
                # OAM OUD Host name
                oudHostName: __OAM_OUD_HOSTNAME__
                # OAM OUD Root user
                oudRootUserDN: __OAM_OUD_ROOTUSERDN__
                # OAM OUD Http port
                oudHttpPort: 
                # OAM OUD Https port
                oudHttpsPort: 
                # OAM OUD Base DN
                oudUserBaseDN: __OAM_OUD_USERSDIRBASEDN__
                # OAM OUD Group DN
                oudGroupDN: __OAM_OUD_GROUPSDIRBASEDN__
            # Log Level
            logLevel: INFO
            # Helidon Security Log Level
            helidonSecurityLogLevel: INFO
            # Helidon WebServer Log Level
            helidonWebServerLogLevel: INFO
            # Helidon Config Log Level
            helidonConfigLogLevel: INFO
            #Helidon MicroProfile Log Level
            helidonMicroProfileLogLevel: INFO
            #Helidon Common Log Level
            helidonCommonLogLevel: INFO
            #Netty Log Level
            nettyServerLogLevel: INFO
            #Jersey Log Level
            jerseyLogLevel: INFO
            #JBoss Weld Log Level
            jbossWeldLogLevel: INFO
            #Audit Log Level
            auditLogLevel: INFO
        secretKeyStore:
            # Name of secret which copies certificates to container
            name: brm-rest-services-manager-ssl-secret
        secretVal:
            # Name of the secret which stores all password
            name: brm-rest-services-manger-env-secret
            # BRM Rest Service Manager Certificate Password
            rsmCertificatePassword: 
            # BRM Infranet Wallet Password used to store BRM connection details to wallet, Wallet password should have one alpha and numeric value.
            brmInfranetWalletPassword: 
            # BIP Password
            bipPassword: 
            # Client Secret required for token based authentication
            clientSecret: 
            # OUD root user password
            oudRootUserPassword:
            # OUD certificate alias is any unique name for JDK keystore, required if https protocol is used.
            oudCertificateAlias: 
            #Trust store file password
            trustStorePassword:

        #Resources with which pods will start.For example:         
        #resources:
        #   limits:
        #      cpu: 2
        #      memory: 1024Mi
        #   requests:
        #      cpu: 1
        #      memory: 512Mi
        resources: {}
        hpa:
            isEnabled: false
            # name of horizontal pod autoscaler
            name: brm-rsm-hpa
            # Minimum number of replicas to which application will be scaled down
            minReplica: 2
            # Maximum number of replicas application can scale up to
            maxReplica: 4
            # Percentage of the utilization of resource, at which HPA will be triggered.
            targetCpu: 80
            # Percentage of the utilization of resource, at which HPA will be triggered.
            targetMemory: 80
        service:
            # Name of Service 
            name: brm-rest-services-manager
            # Service type
            type: NodePort            
